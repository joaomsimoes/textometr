name: Continuous Integration

on:
  push:
    branches: ['master']

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  lint:
    name: Lint code base
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Runs the Super-Linter action
      - name: Run Super-Linter
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Run backend tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir numpy==1.19.4 \
                                     scipy==1.5.4 \
                                     pandas==1.1.4 \
                                     nltk==3.5 \
                                     scikit-learn==0.23.2 \
                                     pymystem3==0.2.0 \
                                     joblib==0.17
          python -m nltk.downloader punkt
      - name: Run tests with unittest
        run: python -m unittest

  build-and-push-docker-images:
    name: Build and push Docker images
    needs: [lint, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: frontend
          push: true
          tags: 1eshkin/textometr-frontend:1.4.4

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: true
          tags: 1eshkin/textometr-backend:1.2.1

      - name: Deploy to Docker swarm
        uses: wshihadeh/docker-deployment-action@v2
        with:
          remote_docker_host: alexey@textometr.ru
          ssh_private_key: ${{ secrets.TEXTOMETR_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.TEXTOMETR_SSH_PUBLIC_KEY }}
          deployment_mode: docker-swarm
          copy_stack_file: true
          keep_files: 5
          deploy_path: /home/alexey/textometr
          stack_file_name: docker-compose.yml
          args: textometr
